/**
 * 프로젝트의 플러그인 의존성 관리를 위한 설정 코드
 */
buildscript {
    ext { // ext: build.gradle에서 사용하는 전역변수를 설정하겠다.
        springBootVersion = '2.1.7.RELEASE' // springBootVersion 전역변수를 생설하고 그 값을 '2.1.7RELEASE'로 하겠다.
    }
    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    } // 스프링부트 그레이들 플러그인의 2.1.7.RELEASE를 의존성으로 받겠다.
}


/**
 * 앞서 선언한 플러그인 의존성들을 적용할 것인지를 결정하는 코드
 * 하기 4개의 플러그인은 자바와 스프링 부트를 사용하기 위해서는 필수 플러그인들이므로, 항상 추가하면 된다.
 */
apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management' // 스프링 부트의 의존성들을 관리해 주는 플러그인


/**
 * repositories는 각종 의존성(라이브러리)들을 어떤 원격 저장소에서 받을지를 정한다.
 * 기본적으로 mavenCentral을 많이 사용하지만, 최근에는 라이브러리 업로드 난이도 때문에 jcenter도 많이 사용한다.
 * (최근 추세: mavenCentral -> jcenter)
 */
repositories {
    mavenCentral()
//    jcenter()
}


/**
 * dependencies는 프로젝트 개발에 필요한 의존성들을 선언하는 곳이다.
 */
dependencies {
    implementation('org.springframework.boot:spring-boot-starter-web')
    testImplementation('org.springframework.boot:spring-boot-starter-test')
}








//
//plugins {
//    id 'java'
//}

group 'org.example'
version '1.0-SNAPSHOT'
sourceCompatibility = 1.8

//repositories {
//    mavenCentral()
//}

//dependencies {
//    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
//    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'
//}

//test {
//    useJUnitPlatform()
//}